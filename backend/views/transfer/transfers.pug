extends ../layouts/layout

block content
	div#exportModal.modal.fade(tabindex="-1" aria-labelledby="exportModal" aria-hidden="true")
		div.modal-dialog
			form(method="post" action="/admin/genTransferCSV")
				div.modal-content
					div.modal-header
						h5#exportModalLabel.modal-title Export Transfers
						button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
					div.modal-body
						div.mb-3
							label.form-label(for="start-date") Start Date
							input.form-control#start-date(type="date" name="startDate")
						div.mb-3
							label.form-label(for="end-date") End Date
							input.form-control#end-date(type="date" name="endDate")
						div.mb-3
							label.form-label(for="driver") Driver
							select#driver.form-select(name="driver")
								option(value="null" selected) All drivers
								option(value=17) Ã‚ngelo Lopes
								option(value=18) Benjamim Ramos
						div.mb-3
							label.form-label(for="operator") Operator
							select#operator.form-select(name="operator")
								option(value="null" selected) All operators
								option(value=1) Conception
								option(value=2) Outdoor
					div.modal-footer
						button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Close
						button.btn.btn-primary(type="submit" data-bs-dismiss="modal") Export

	include transfer_table

	div.d-flex.flex-row.justify-content-between.my-3
		div.d-flex.align-items-end
			a.btn.btn-success(href="/admin/transfers/create")
				i.bi.bi-plus-lg
				|  Create
			button.ms-2.btn.btn-primary(type="button" data-bs-toggle="modal" data-bs-target="#exportModal")
				i.bi.bi-file-earmark-arrow-down
				|  Export
		div
			form.row.g-1#date-filter-form(method="GET")
				div.col
					label.form-label(for="start-date-filter-input") Start Date
					input.form-control#start-date-filter-input(type="date")
					input#start-date-filter(type="hidden" name="startDate")
				div.col
					label.form-label(for="end-date-filter-input") End Date
					input.form-control#end-date-filter-input(type="date")
					input#end-date-filter(type="hidden" name="endDate")
				div.col.d-flex.align-items-end
					button.btn.btn-primary(type="submit")
						i.bi.bi-search
						|  Search
			div.row.g-0
				a.col.btn.btn-primary.text-nowrap(href="/admin/transfers")
					| All
				a#today-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
					| Today
				a#week-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
					| This Week
				a#month-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
					| This Month

	+transfer_table(transfers)

block scripts
	script.
		//Today button dates and setting of href attribute
		let today = new Date();
		today.setHours(0, 0, 0, 0);
		let tomorrow = new Date(today.getTime());
		tomorrow.setDate(tomorrow.getDate() + 1);

		document.getElementById("today-button").setAttribute("href", `/admin/transfers?startDate=${today.toISOString()}&endDate=${tomorrow.toISOString()}`);

		// Week button dates and setting of href attribute
		let firstDayOfWeek = new Date(today.getTime());
		firstDayOfWeek.setDate(firstDayOfWeek.getDate() - firstDayOfWeek.getDay());
		let lastDayOfWeek = new Date(firstDayOfWeek.getTime());
		lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 7);

		document.getElementById("week-button").setAttribute("href", `/admin/transfers?startDate=${firstDayOfWeek.toISOString()}&endDate=${lastDayOfWeek.toISOString()}`);

		// Month button dates and setting of href attribute
		let firstDayOfMonth = new Date(today.getTime());
		firstDayOfMonth.setDate(1);
		let lastDayOfMonth = new Date(firstDayOfMonth.getTime());
		lastDayOfMonth.setMonth(lastDayOfMonth.getMonth() + 1);

		document.getElementById("month-button").setAttribute("href", `/admin/transfers?startDate=${firstDayOfMonth.toISOString()}&endDate=${lastDayOfMonth.toISOString()}`);

		let datetimeInputs = document.querySelectorAll(".datetime");
		let datetimeFields = document.querySelectorAll(".datetime-field");

		for (let i = 0; i < datetimeInputs.length; i++) {
			let datetime = new Date(datetimeInputs[i].value);

			let dateSpan = datetimeFields[i].querySelector(".date-span");
			let timeSpan = datetimeFields[i].querySelector(".time-span");

			let dateString = String(datetime.getDate()).padStart(2, "0") + "/" + String(datetime.getMonth() + 1).padStart(2, "0") + "/" + datetime.getFullYear();
			let timeString = String(datetime.getHours()).padStart(2, "0") + ":" + String(datetime.getMinutes()).padStart(2, "0");

			dateSpan.innerHTML = `${dateString}`;
			timeSpan.innerHTML = `${timeString}`;
		}

		document.getElementById("date-filter-form").addEventListener("submit", function (event) {
			event.preventDefault();

			let startDate = new Date(document.getElementById("start-date-filter-input").value);
			let endDate = new Date(document.getElementById("end-date-filter-input").value);
			startDate.setHours(0, 0, 0, 0);
			endDate.setHours(0, 0, 0, 0);
			endDate.setDate(endDate.getDate() + 1);

			console.log(endDate);

			if (!isNaN(startDate)) {
				document.getElementById("start-date-filter").value = startDate.toISOString();
			}
			if (!isNaN(endDate)) {
				document.getElementById("end-date-filter").value = endDate.toISOString();
			}

			event.target.submit();
		});