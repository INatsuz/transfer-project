extends ../layouts/layout

block content
	div#searchModal.modal.fade(tabindex="-1" aria-labelledby="searchModal" aria-hidden="true")
		div.modal-dialog
			form#search-form(method="GET")
				div.modal-content
					div.modal-header
						h5#searchModalLabel.modal-title Search Transfers
						button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
					div.modal-body
						div.mb-3
							label.form-label(for="start-date-filter-input") Start Date
							input.form-control#start-date-filter-input(type="date")
							input#start-date-filter(type="hidden" name="startDate")
						div.mb-3
							label.form-label(for="end-date-filter-input") End Date
							input.form-control#end-date-filter-input(type="date")
							input#end-date-filter(type="hidden" name="endDate")
						div.mb-3
							label.form-label(for="person-filter") Person
							input.form-control#person-filter(type="text" name="person")
					div.modal-footer
						button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Close
						button.btn.btn-primary(type="submit" data-bs-dismiss="modal") Search

	include transfer_table

	div.d-print-none.d-flex.flex-row.justify-content-between.my-3
		div.d-flex.align-items-end
			a.btn.btn-success(href=`/admin/transfers/create?returnLink=${url}`)
				i.bi.bi-plus-lg
				|  Create
			button.ms-2.btn.btn-primary(type="button" data-bs-toggle="modal" data-bs-target="#searchModal")
				i.bi.bi-search
				|  Search
			button.ms-2.btn.btn-primary(onclick="window.print();")
				i.bi.bi-printer
				|  Print
		div.row.g-0
			div.col
				input.form-control#day-filter-input(type="date")
			a#yesterday-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
				| Yesterday
			a#today-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
				| Today
			a#tomorrow-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
				| Tomorrow
			a#week-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
				| This Week
			a#month-button.col.ms-2.btn.btn-primary.text-nowrap(href=`/admin/transfers`)
				| This Month

	+transfer_table(transfers)

block scripts
	script.
		let activeButton = "#{activeButton}";

		if (activeButton) {
			document.getElementById(activeButton).classList.add("active");
		}

		//Today button dates and setting of href attribute
		let today = new Date();
		today.setHours(0, 0, 0, 0);
		let yesterday = new Date(today.getTime());
		yesterday.setDate(today.getDate() - 1);
		let tomorrow = new Date(today.getTime());
		tomorrow.setDate(tomorrow.getDate() + 1);
		let day_after_tomorrow = new Date(tomorrow.getTime());
		day_after_tomorrow.setDate(day_after_tomorrow.getDate() + 1);

		document.getElementById("yesterday-button").setAttribute("href", `/admin/transfers?activeButton=yesterday-button&&startDate=${yesterday.toISOString()}&endDate=${today.toISOString()}`);
		document.getElementById("today-button").setAttribute("href", `/admin/transfers?activeButton=today-button&startDate=${today.toISOString()}&endDate=${tomorrow.toISOString()}`);
		document.getElementById("tomorrow-button").setAttribute("href", `/admin/transfers?activeButton=tomorrow-button&startDate=${tomorrow.toISOString()}&endDate=${day_after_tomorrow.toISOString()}`);

		// Week button dates and setting of href attribute
		let firstDayOfWeek = new Date(today.getTime());
		firstDayOfWeek.setDate(firstDayOfWeek.getDate() - firstDayOfWeek.getDay());
		let lastDayOfWeek = new Date(firstDayOfWeek.getTime());
		lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 7);

		document.getElementById("week-button").setAttribute("href", `/admin/transfers?activeButton=week-button&startDate=${firstDayOfWeek.toISOString()}&endDate=${lastDayOfWeek.toISOString()}`);

		// Month button dates and setting of href attribute
		let firstDayOfMonth = new Date(today.getTime());
		firstDayOfMonth.setDate(1);
		let lastDayOfMonth = new Date(firstDayOfMonth.getTime());
		lastDayOfMonth.setMonth(lastDayOfMonth.getMonth() + 1);

		document.getElementById("month-button").setAttribute("href", `/admin/transfers?activeButton=month-button&startDate=${firstDayOfMonth.toISOString()}&endDate=${lastDayOfMonth.toISOString()}`);

		let datetimeInputs = document.querySelectorAll(".datetime");
		let datetimeFields = document.querySelectorAll(".datetime-field");

		for (let i = 0; i < datetimeInputs.length; i++) {
			let datetime = new Date(datetimeInputs[i].value);

			let dateSpan = datetimeFields[i].querySelector(".date-span");
			let timeSpan = datetimeFields[i].querySelector(".time-span");

			let dateString = String(datetime.getDate()).padStart(2, "0") + "/" + String(datetime.getMonth() + 1).padStart(2, "0") + "/" + datetime.getFullYear();
			let timeString = String(datetime.getHours()).padStart(2, "0") + ":" + String(datetime.getMinutes()).padStart(2, "0");

			dateSpan.innerHTML = `${dateString}`;
			timeSpan.innerHTML = `${timeString}`;
		}

		document.getElementById("search-form").addEventListener("submit", function (event) {
			event.preventDefault();

			let startDate = new Date(document.getElementById("start-date-filter-input").value);
			let endDate = new Date(document.getElementById("end-date-filter-input").value);
			startDate.setHours(0, 0, 0, 0);
			endDate.setHours(0, 0, 0, 0);
			endDate.setDate(endDate.getDate() + 1);

			console.log(endDate);

			if (!isNaN(startDate)) {
				document.getElementById("start-date-filter").value = startDate.toISOString();
			}
			if (!isNaN(endDate)) {
				document.getElementById("end-date-filter").value = endDate.toISOString();
			}

			event.target.submit();
		});

		document.getElementById("day-filter-input").addEventListener("change", function (event) {
			document.getElementById("start-date-filter-input").value = event.target.value;
			document.getElementById("end-date-filter-input").value = event.target.value;

			document.getElementById("search-form").requestSubmit();
		});