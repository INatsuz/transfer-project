extends ../layouts/layout

block content
	div.row.g-0.mt-2
		div.col-12
			form#form(method="post" action=`/admin/transfers/update/${ID}?returnLink=${url}`)
				div.mb-3
					label.form-label(for="person-name") Name
					input.form-control#person-name(type="text" name="person_name" value=transfer.person_name)
				div.mb-3
					label.form-label(for="origin") Origin
					input.form-control#origin(type="text" name="origin" value=transfer.origin)
				div.mb-3
					label.form-label(for="destination") Destination
					input.form-control#destination(type="text" name="destination" value=transfer.destination)
				div.mb-3
					label.form-label(for="num-of-people") Pax
					input.form-control#num-of-people(type="text" name="num_of_people" value=transfer.num_of_people)
				div.mb-3
					input#datetime-utc(type="hidden" value=transfer.transfer_time)
					label.form-label(for="datetime-input") Date and time
					input.form-control#datetime-input(type="datetime-local" name="datetime-input" step=60 required)
					input#datetime(type="hidden" name="datetime")
				div.mb-3
					label.form-label(for="status") Status
					select.form-select#status(name="status")
						option(value="PENDING" selected=transfer.status === "PENDING") PENDING
						option(value="IN PROGRESS" selected=transfer.status === "IN PROGRESS") IN PROGRESS
						option(value="FINISHED" selected=transfer.status === "FINISHED") FINISHED
						option(value="NO SHOW" selected=transfer.status === "NO SHOW") NO SHOW
						option(value="CANCELLED" selected=transfer.status === "CANCELLED") CANCELLED
						option(value="CONFIRMED" selected=transfer.status === "CONFIRMED") CONFIRMED
				div.mb-3
					label.form-label(for="flight") Flight
					input.form-control#flight(type="text" name="flight" value=transfer.flight)
				div.mb-3
					label.form-label(for="price") Price
					input.form-control#price(type="number" name="price" step="0.01" value=transfer.price)
				div.mb-3
					label.form-label(for="paid") Paid
					input.form-control#paid(type="number" name="paid" step="0.01" value=transfer.paid)
				div.mb-3
					label.form-label(for="status") Payment method
					select.form-select#payment-method(name="paymentMethod")
						option(value="null") None
						option(value="CASH" selected=transfer.payment_method === "CASH") Cash
						option(value="CARD" selected=transfer.payment_method === "CARD") Card
						option(value="TRANSFER" selected=transfer.payment_method === "TRANSFER") Bank Transfer
						option(value="TRANSFER" selected=transfer.payment_method === "HOTEL BILLING") Hotel Billing
				div.mb-3
					label.form-label(for="driver") Driver
					select.form-select#driver(name="driver")
						option(value="null") No driver
						each driver in drivers
							option(value=driver.ID selected=driver.ID === transfer.driver)= driver.name
					input#driver-commission(type="hidden" name="driverCommission" value="0")
				div.mb-3
					label.form-label(for="vehicle") Vehicle
					select.form-select#vehicle(name="vehicle")
						option(value="null") No vehicle
						each vehicle in vehicles
							option(value=vehicle.ID selected = vehicle.ID === transfer.vehicle)= vehicle.name
				div.mb-3
					label.form-label(for="operator") Operator
					select.form-select#operator(name="operator")
						option(value="null") No operator
						each operator in operators
							option(value=operator.ID selected = operator.ID === transfer.service_operator)= operator.name
					input#operator-commission(type="hidden" name="operatorCommission" value="0")
				div.mb-3
					label.form-label(for="observations") Observations
					textarea.form-control#observations(name="observations" rows=2)= transfer.observations

				button.btn.btn-success(type="submit")
					i.bi.bi-pencil
					|  Update

block scripts
	script.
		let og_time = new Date(document.getElementById("datetime-utc").value)
		let adjusted_time = new Date(og_time.getTime() - og_time.getTimezoneOffset() * 60000)
		document.getElementById("datetime-input").value = adjusted_time.toISOString().slice(0, -1);

		let operatorsArray = JSON.parse("#{JSON.stringify(operators)}".replaceAll('&quot;', '"'));
		let driversArray = JSON.parse("#{JSON.stringify(drivers)}".replaceAll('&quot;', '"'));

		document.getElementById("form").addEventListener("submit", function (event) {
			event.preventDefault()

			try {
				let datetime = new Date(document.getElementById("datetime-input").value);
				console.log(datetime.toISOString());
				document.getElementById("datetime").value = datetime.toISOString();
			} catch (e) {
				console.log("No valid date");
			}

			let operator = Number.parseInt(document.getElementById("operator").value);
			let foundOperator = operatorsArray.find(op => op.ID === operator);
			console.log(foundOperator);
			if (foundOperator) {
				document.getElementById("operator-commission").value = operatorsArray.find(op => op.ID === operator).commission;
			}

			let driver = Number.parseInt(document.getElementById("driver").value);
			let foundDriver = driversArray.find(dr => dr.ID === driver);
			console.log(foundDriver);
			if (foundDriver) {
				document.getElementById("driver-commission").value = driversArray.find(dr => dr.ID === driver).commission;
			}

			event.target.submit();
		});