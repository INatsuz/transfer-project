/*
CREATE TABLE VehicleStatus (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	status VARCHAR(32) NOT NULL
);
*/

CREATE TABLE UserType (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	user_type VARCHAR(32) UNIQUE NOT NULL
);

/*
CREATE TABLE TransferStatus (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	status VARCHAR(32) NOT NULL
);
*/

CREATE TABLE ServiceOperator (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(128) NOT NULL,
	added_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Client (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(128) NOT NULL,
	email VARCHAR(128) NOT NULL,
	gender ENUM('Male', 'Female', 'Other'),
	added_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Vehicle (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(128) NOT NULL,
	nickname VARCHAR(128),
	brand VARCHAR(128) NOT NULL,
	license_plate VARCHAR(16) NOT NULL,
	seat_number TINYINT NOT NULL,
	status ENUM('Broken', 'Working') NOT NULL /* Might need to be changed to Portuguese or could switch to use a different table */
);

CREATE TABLE AppUser (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	email VARCHAR(128) UNIQUE NOT NULL,
	password VARCHAR(128) NOT NULL,
	name VARCHAR(128) NOT NULL,
	birthday DATE NOT NULL,
	userType INT UNSIGNED NOT NULL,
	activeVehicle INT UNSIGNED,
	lat FLOAT,
	lng FLOAT,
	FOREIGN KEY (userType) REFERENCES userType(ID)
);

CREATE TABLE Transfer (
	ID INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	person_name VARCHAR(128) NOT NULL,
	service_operator INT UNSIGNED,
	client INT UNSIGNED,
	num_of_people TINYINT NOT NULL,
	price FLOAT(2) NOT NULL,
	origin VARCHAR(128) NOT NULL,
	origin_lat FLOAT,
	origin_lng FLOAT,
	destination VARCHAR(128) NOT NULL,
	destination_lat FLOAT,
	destination_lng FLOAT,
	transfer_time TIMESTAMP NOT NULL,
	flight VARCHAR(64),
	status ENUM('PENDING', 'IN PROGRESS', 'FINISHED') NOT NULL,
	paid BOOLEAN NOT NULL,
	driver INT UNSIGNED,
	vehicle INT UNSIGNED,
	FOREIGN KEY (service_operator) REFERENCES ServiceOperator(ID),
	FOREIGN KEY (client) REFERENCES Client(ID),
	FOREIGN KEY (driver) REFERENCES AppUser(ID),
	FOREIGN KEY (vehicle) REFERENCES Vehicle(ID)
);

